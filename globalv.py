import numpy as np
import math

# 种群数量

population_size = 100



# 迭代次数

time_max = 500

# 变异概率

mutation = 0.1

# 交叉概率

cross_num = 0.7


#无人机最大承载
max_weight = 10000

# 最大飞行半径,单位m
max_flight = 20000

# #任务类数量
T_type = 3
# 无人机装载资源时间比
U_T = 5
# 执行任务时间比
T_T = 10



# #情况1： 10A 20T
# U_num = 10
# T_num = 20
#
# # 无人机能力
# S = [1, 2, 3, 4, 5, 6]
# A = [5, 6, 7, 8, 9, 10]
# U_V = [80, 80, 80, 80, 90, 90, 80, 80, 80, 80]
# U_S = [0, 0, 0, 0, 10, 10, 15, 15, 15, 15]
# # Tar_start = np.array([[20, 10], [10, 25], [0, 50], [50, 40], [25, 20], [40, 40], [10, 10]])
# # Tar_start = np.array([[20, 10], [10, 25], [0, 50], [50, 40], [25, 20]])
# # Tar_start = np.random.randint(0, 500, size=(20, 2))
# Tar_start = np.array([[462, 167], [254, 410], [357, 496], [421, 96], [357, 454], [140, 498], [447, 251], [251, 178], [192, 401], [160,  24], [411,234], [338, 376], [171, 228], [401,  48], [149,  55], [216, 202], [286, 256], [179, 376], [473, 392], [421, 187]])
# # Tar_need = np.random.randint(1, 5, size=(20, 1))
# Tar_need = [2, 3, 4, 1, 4, 2, 4, 4, 2, 4, 2, 1, 2, 2, 1, 1, 2, 1, 3, 4]


#情况1： 30A 10T
U_num = 20
T_num = 40

# 无人机能力
S = list(range(1, 3 * U_num // 5 + 1))
A = list(range(2 * U_num // 5 + 1, U_num + 1))
arr = [80] * U_num  # 初始化数组为 80
start = U_num // 2 - (U_num // 10)  # 计算中间 n/5 个数的起始索引
end = start + (U_num // 5)  # 计算中间 n/5 个数的结束索引
arr[start:end] = [90] * (U_num // 5)  # 替换中间部分为 90

U_V = arr
U_S = [0] * (2 * U_num // 5) + [10] * (U_num // 5) + [15] * (2 * U_num // 5)
# Tar_start = np.array([[20, 10], [10, 25], [0, 50], [50, 40], [25, 20], [40, 40], [10, 10]])
# Tar_start = np.array([[20, 10], [10, 25], [0, 50], [50, 40], [25, 20]])
Tar_start = np.random.randint(0, 500, size=(T_num, 2))
# Tar_start = np.array([[462, 167], [254, 410], [357, 496], [421, 96], [357, 454], [140, 498], [447, 251], [251, 178], [192, 401], [160,  24], [411,234], [338, 376], [171, 228], [401,  48], [149,  55], [216, 202], [286, 256], [179, 376], [473, 392], [421, 187]])
Tar_need = np.random.randint(1, 5, size=(T_num, 1))
# Tar_need = [2, 3, 4, 1, 4, 2, 4, 4, 2, 4, 2, 1, 2, 2, 1, 1, 2, 1, 3, 4]